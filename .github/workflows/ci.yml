name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run unit tests
        run: |
          pytest --cov=app --cov-report=xml --cov-report=term tests/test_case.py

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: unit-coverage-report-${{ matrix.python-version }}
          path: coverage.xml

  bdd-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install behave

      - name: Run BDD tests
        run: |
          behave features/

  integration-tests:
    runs-on: ubuntu-latest
    needs: [unit-tests, bdd-tests]
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y
      - name: Start LocalStack with Docker Compose
        run: docker-compose up -d

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Load environment variables from .env
        run: |
          export $(grep -v '^#' .env | xargs)
      - name: Configure AWS CLI for LocalStack
        run: |
          aws configure set aws_access_key_id "test"
          aws configure set aws_secret_access_key "test"
          aws configure set default.region "us-east-1"
          aws configure set endpoint_url http://localhost:4566
      - name: Run pylint
        run: |
          pylint --fail-under 7 app
          exitcode="$?"
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          exit "$exitcode"
      - name: Run integration tests
        run: |
          pytest --maxfail=1 --disable-warnings -v tests/test_integration.py
          coverage run -m pytest tests/test_integration.py && coverage report -m
      - name: Teardown Docker
        if: always()
        run: docker-compose down